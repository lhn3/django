"""
Django settings for dj1 project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os,sys

# Build paths inside the projecxt like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7v-tkkks-udydfa&1at0hcx=0o&_=0$^8(b-6vfvocu1j@^q=w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1','10.0.2.15']
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))

AUTH_USER_MODEL='user1.User'


# Application definition

INSTALLED_APPS = [
    're_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user1',
    'ver',
    'dbapp',
    'video',
    'files',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'middleware.middleware.Form_Csrf',
]

ROOT_URLCONF = 'dj1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [BASE_DIR / 'templates'],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dj1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

#配置数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST':'127.0.0.1',
        'POST':3306,
        'USER':'root',
        'PASSWORD':'q1355947',
        'NAME':'djangodb1',
        # 'OPTIONS':{'read_default_file':'dj1/ant/dbs/mysqldb.conf'},
    }
}

#配置redis
CACHES={
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient', }
    },

    'session': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/2',
        'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient', }
    },

    'verify': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/3',
        'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient', }
    },
}
SESSION_ENGINE='django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS='session'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

#静态文件
STATIC_URL = '/static/'
STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]

#图片文件
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media')

#配置日志
LOGGING={'version':1,                           #版本
         'disable_existing_loggers':False,      #是否禁用已存的日志器
         'formatters':{'verbose':{'format':'%(levelname)s%(asctime)s%(module)s%(lineno)d%(message)s'},
                       'simple':{'format':'%(levelname)s%(module)s%(lineno)d%(message)s'},},
         'filters':{'require_debug_true':{'()':'django.utils.log.RequireDebugTrue'},},
         'handlers':{'console':{'level':'DEBUG',
                                'filters':['require_debug_true'],
                                'class':'logging.StreamHandler',
                                'formatter':'simple'},
                     'file':{'level':'INFO',
                             'class':'logging.handlers.RotatingFileHandler',
                             # 'filename':os.path.join(BASE_DIR,'logs/dj1log.log'),  #logs文件地址在项目二级目录下时
                             'filename': os.path.join(os.path.dirname(BASE_DIR), 'logs/dj1log.log'),  # logs文件地址与项目二级目录同级时
                             'maxBytes':300*1024*1024,
                             'backupCount':10,
                             'formatter':'verbose'},},
         'loggers':{'django':{'handlers':['console','file'],   #定义一个名为django的日志器
                              'propagate':True,
                              'level':'INFO'},},               #日志接收的最低日志等级
}

IP_PULL={}

FILE_URL='http://127.0.0.1:8000/'

#分布式文件系统配置
FDFS_URL='http://127.0.0.1:8888/'
# FDFS_CLIENT_CONF=os.path.join(BASE_DIR,'dj1/fastdfs/client.conf')  #云服务器配置